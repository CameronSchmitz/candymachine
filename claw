//*******************************************************************
//
//   File: NBody.java
//
//   Author: Jason Huishen Lu and Cameron Schmitz      Email: huishen.lu@yale.edu
//
//   Class: CS 112
//
//   Time spent on this problem: 9 hours
//   --------------------
//
//      This program simulates a our solar system using the leap frog method
//
//*******************************************************************
import java.io.File;
import java.io.FileNotFoundException;
import java.util.Scanner;

public class claw {

    public static final String PLANETS_FILE = "planets.txt";

    public static final int WIDTH = 540;

    public static final int HEIGHT = 560;

    // animation pause (in miliseconds)
    public static final int DELAY = 20;

    // music (2001 theme)
    public static final String MUSIC = "clawmusic.wav";

    // background image
    public static final String BACKGROUND = "back.png";


    // TODO: read the planet file, new the parallel arrays, and load


    // their values from the file.
    public static void loadPlanets(String planetFileName) {

    }

    public static void runSimulation() {

        // run numerical simulation from 0 to T
        for (double t = 0.0; t < 100000; t++) {

            // draw background and then planets

            StdDraw.picture(WIDTH/2, HEIGHT/2, BACKGROUND);

            // pause for a short while, using "animation mode"
            StdDraw.show(DELAY);
        }
    }


    public static void main(String[] args) {
        // TODO: read T and dt from command line.
        Scanner console = new Scanner(System.in);

        // load planets from file specified in the command line


        // rescale coordinates that we can use natural x- and y-coordinates
        StdDraw.setCanvasSize(WIDTH, HEIGHT);

        // Change scale from the default of [0 - 1.0].
        StdDraw.setXscale(0, WIDTH);
        StdDraw.setYscale(0, HEIGHT);

        StdAudio.play( MUSIC );

        // turn on animation mode
        StdDraw.show(0);

        // Run simulation
        runSimulation();

    }//end main

    //printArray used for debugging
    public static void printArray(Double[] anArray) {
        for (int i = 0; i < anArray.length; i++) {
            if (i > 0) {
                System.out.print(", ");
            }
            System.out.print(anArray[i]);
        }
    }//end printArray
}//end program
